<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>pszh blog</title>
  <icon>https://www.gravatar.com/avatar/3c70eb1421246ea576d211b9c06428af</icon>
  <subtitle>subtitle</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://pszh.github.io/"/>
  <updated>2019-01-17T11:13:27.163Z</updated>
  <id>https://pszh.github.io/</id>
  
  <author>
    <name>pszh</name>
    <email>peng.sizheng@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>esLint</title>
    <link href="https://pszh.github.io/2019/01/17/eslint/"/>
    <id>https://pszh.github.io/2019/01/17/eslint/</id>
    <published>2019-01-17T10:28:51.211Z</published>
    <updated>2019-01-17T11:13:27.163Z</updated>
    
    <content type="html"><![CDATA[<h3 id="esLint-介绍"><a href="#esLint-介绍" class="headerlink" title="esLint 介绍"></a>esLint 介绍</h3><p>​    团队开发    ，统一代码风格 </p><p>​    命令介绍  <a href="https://eslint.org/docs/user-guide/command-line-interface" target="_blank" rel="noopener">https://eslint.org/docs/user-guide/command-line-interface</a></p><h3 id="安装-amp-初始化配置文件"><a href="#安装-amp-初始化配置文件" class="headerlink" title="安装 &amp; 初始化配置文件"></a>安装 &amp; 初始化配置文件</h3><h4 id="全局安装"><a href="#全局安装" class="headerlink" title="全局安装"></a>全局安装</h4><p>​        1. npm install -g eslint</p><p>​        2. eslint –init</p><p>​        然后一系列的配置 </p><h4 id="本地项目"><a href="#本地项目" class="headerlink" title="本地项目"></a>本地项目</h4><p>​        1.  npm install eslint –save-dev</p><p>​        2.  ./node_modules/.bin/eslint –init  (需要当前项目路径)</p><p>​        然后一系列配置</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><pre><code>#### eslintrc文件配置</code></pre><p>​    规则配置文件 ，  通过上面 init 方式配置的都是在项目最外层生成一个配置文件， （当然你也可以在package.json）</p><p>​    官方文档 <a href="https://eslint.org/docs/user-guide/configuring" target="_blank" rel="noopener">https://eslint.org/docs/user-guide/configuring</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"env"</span>: &#123;   <span class="comment">// 指定环境</span></span><br><span class="line">        <span class="string">"node"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"commonjs"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"es6"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"globals"</span>: &#123; <span class="comment">//指定全局</span></span><br><span class="line">        <span class="string">"var1"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"var2"</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">"plugins"</span>:&#123; <span class="comment">//配置插件  先通过  npm install --save-dev eslint-plugin-react  最好在init前安装</span></span><br><span class="line">        <span class="string">"eslint-plugin-react"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">"extends"</span>: <span class="string">"eslint:recommended"</span>, <span class="comment">//扩展配置文件</span></span><br><span class="line">    <span class="string">"parserOptions"</span>: &#123;  <span class="comment">//指定解析器选项</span></span><br><span class="line">        <span class="string">"ecmaVersion"</span>: <span class="number">2016</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"rules"</span>: &#123; <span class="comment">// 配置规则  https://eslint.org/docs/rules/</span></span><br><span class="line">        <span class="string">"indent"</span>: [</span><br><span class="line">            <span class="string">"error"</span>,</span><br><span class="line">            <span class="string">"tab"</span> 使用tab键</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"linebreak-style"</span>: [</span><br><span class="line">            <span class="string">"error"</span>,</span><br><span class="line">            <span class="string">"unix"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"quotes"</span>: [ </span><br><span class="line">            <span class="string">"error"</span>,</span><br><span class="line">            <span class="string">"single"</span> 单引号</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"semi"</span>: [ </span><br><span class="line">            <span class="string">"error"</span>,</span><br><span class="line">            <span class="string">"always"</span> 使用分号</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="部分文件忽略检测"><a href="#部分文件忽略检测" class="headerlink" title="部分文件忽略检测"></a>部分文件忽略检测</h4><p> 在 eslintrc同目录下创建 .eslintignore 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># /node_modules/* and /bower_components/* 这个是默认忽略的</span><br><span class="line"></span><br><span class="line"># Ignore built files except build/index.js  忽略build下的文件除了 index.js</span><br><span class="line">build/*</span><br><span class="line">!build/index.js</span><br><span class="line"># 忽略 dist目录下文件</span><br><span class="line">dist/*</span><br></pre></td></tr></table></figure><h4 id="手动检测代码，自动修复格式化"><a href="#手动检测代码，自动修复格式化" class="headerlink" title="手动检测代码，自动修复格式化"></a>手动检测代码，自动修复格式化</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">eslint --ext src <span class="comment">//手动检测src文件夹下的.js   --ext 默认 .js </span></span><br><span class="line">eslint --ext .js .vue src <span class="comment">//手动检测src下的 .js .vue 文件</span></span><br><span class="line"></span><br><span class="line">eslint --fix src<span class="comment">//修复大部分的格式问题</span></span><br></pre></td></tr></table></figure><h4 id="结合webpack使用"><a href="#结合webpack使用" class="headerlink" title="结合webpack使用"></a>结合webpack使用</h4><p>​    安装一个eslint-loader 的loader​ </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">module:&#123;  </span><br><span class="line">preLoaders: [ //安全起见用这个preLoaders, 如果用loaders,且使用了babel-loader，那babel-loader必须在eslint-loader之前配置</span><br><span class="line">&#123; test: /\.js$/,  loader: &quot;eslint-loader&quot;, exclude: /node_modules/&#125;</span><br><span class="line">],  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="git-代码提交前检测"><a href="#git-代码提交前检测" class="headerlink" title="git 代码提交前检测"></a>git 代码提交前检测</h3><p>​    这个时候不得不提一下git hook了（<a href="https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90）​" target="_blank" rel="noopener">https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90）​</a>    </p><p>​    查看当前目录下的hook文件     cd .git/hooks &amp;&amp; ls      </p><p>​    然后看到 很多.sample 的文件，前面对应git 钩子一些操作， 而 .sample 后缀都是未启动状态，对应的钩子要生效，需要用shell脚本把.sample去掉，如何用js去掉，</p><p>​    <strong>这里才是重点 </strong> (⚠️必须在git仓库添加之后)</p><ol><li><p>安装pre-commit   </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pre-commit --save-dev</span><br></pre></td></tr></table></figure></li><li><p>配置package.json</p></li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">第一种//执行静态文件检查</span><br><span class="line">"scripts": &#123;</span><br><span class="line">    "lint": "eslint --ext .js --cache --fix src", //保证eslint在提交时会校验src目录下的js文件</span><br><span class="line">  &#125;,</span><br><span class="line">  "pre-commit": [</span><br><span class="line">    "lint",</span><br><span class="line">  ]</span><br><span class="line">第二种 //只校验提交代码</span><br><span class="line">"scripts": &#123;</span><br><span class="line">     "lint": "eslint src --ext .js --cache --fix",</span><br><span class="line">     "pre-lint": "node check.js"//https://www.jianshu.com/p/072a96633479</span><br><span class="line">&#125;,</span><br><span class="line">"pre-commit": [</span><br><span class="line">     "pre-lint",</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="制定自己的规则"><a href="#制定自己的规则" class="headerlink" title="制定自己的规则"></a>制定自己的规则</h3><p><a href="https://eslint.org/docs/user-guide/command-line-interface" target="_blank" rel="noopener">https://eslint.org/docs/user-guide/command-line-interface</a></p><h3 id="其他的配置"><a href="#其他的配置" class="headerlink" title="其他的配置"></a>其他的配置</h3><ol><li>standardjs：<a href="https://standardjs.com/readme-zhcn.html" target="_blank" rel="noopener">https://standardjs.com/readme-zhcn.html</a>     （集成度很好 ，包括git hook）</li><li>prettier：<a href="https://zhuanlan.zhihu.com/p/34188596" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/34188596</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;esLint-介绍&quot;&gt;&lt;a href=&quot;#esLint-介绍&quot; class=&quot;headerlink&quot; title=&quot;esLint 介绍&quot;&gt;&lt;/a&gt;esLint 介绍&lt;/h3&gt;&lt;p&gt;​    团队开发    ，统一代码风格 &lt;/p&gt;
&lt;p&gt;​    命令介绍  &lt;a
      
    
    </summary>
    
      <category term="Web" scheme="https://pszh.github.io/categories/Web/"/>
    
    
      <category term="eslint" scheme="https://pszh.github.io/tags/eslint/"/>
    
  </entry>
  
  <entry>
    <title>Node 常用命令 与版本控制</title>
    <link href="https://pszh.github.io/2019/01/17/node%20/"/>
    <id>https://pszh.github.io/2019/01/17/node /</id>
    <published>2019-01-17T10:28:51.211Z</published>
    <updated>2019-01-17T11:13:40.340Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Node-常用命令"><a href="#Node-常用命令" class="headerlink" title="Node 常用命令"></a>Node 常用命令</h3><p>清除 node_modules 文件 ：rm -rvf node_modules/</p><p>安装模块  </p><ol><li>全局安装 npm install -g n   （全局的 npm install -g n@..）</li><li>安装到项目中的depend :  npm install express </li><li>安装到项目devD  : npm install express –save-dev</li></ol><p>卸载模块：npm uninstall express</p><p>更新模块： npm update express</p><p>清本地缓存 ：npm cache clear</p><p>查看全局安装模块 ：npm list -g</p><h3 id="node-版本控制-n"><a href="#node-版本控制-n" class="headerlink" title="node 版本控制 n"></a>node 版本控制 n</h3><p>安装 </p><ol><li><p>通过npm安装 npm install -g n</p><ol start="2"><li>通过源代码</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/visionmedia/n.git</span><br><span class="line">$ cd n</span><br><span class="line">$ make install</span><br><span class="line">如果需要配置环境变量 在最后一条命令前加 PREFIX前缀</span><br><span class="line">$ PREFIX=$HOME make install #将n安装到~/bin/n</span><br></pre></td></tr></table></figure></li></ol><h4 id="使用和安装node"><a href="#使用和安装node" class="headerlink" title="使用和安装node"></a>使用和安装node</h4><ol><li><p>en安装制定版本   n 0.8.17    </p></li><li><p>卸载  sudo n - 0.8.17</p></li><li><p>切换版本 </p><p>  输入<code>n</code>来选择已经安装的node版本，或者通过<code>^C</code>取消选择 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ n</span><br><span class="line">    0.8.17</span><br><span class="line">  ο 0.10.26</span><br><span class="line">    0.11.12</span><br></pre></td></tr></table></figure></li><li><p>查看所有可安装版本 node ls   (ls是list缩写)</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Node-常用命令&quot;&gt;&lt;a href=&quot;#Node-常用命令&quot; class=&quot;headerlink&quot; title=&quot;Node 常用命令&quot;&gt;&lt;/a&gt;Node 常用命令&lt;/h3&gt;&lt;p&gt;清除 node_modules 文件 ：rm -rvf node_modules/&lt;
      
    
    </summary>
    
      <category term="Web" scheme="https://pszh.github.io/categories/Web/"/>
    
    
      <category term="node" scheme="https://pszh.github.io/tags/node/"/>
    
      <category term="npm" scheme="https://pszh.github.io/tags/npm/"/>
    
  </entry>
  
</feed>
