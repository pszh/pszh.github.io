{"meta":{"title":"pszh blog","subtitle":"subtitle","description":"description","author":"pszh","url":"https://pszh.github.io"},"pages":[{"title":"categories","date":"2019-01-17T07:59:50.000Z","updated":"2019-01-17T08:23:45.609Z","comments":false,"path":"categories/index.html","permalink":"https://pszh.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-01-17T07:59:13.000Z","updated":"2019-01-17T08:24:38.115Z","comments":false,"path":"tags/index.html","permalink":"https://pszh.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Node 常用命令 与版本控制","slug":"node ","date":"2019-01-17T10:16:43.946Z","updated":"2019-01-17T10:21:53.303Z","comments":true,"path":"2019/01/17/node /","link":"","permalink":"https://pszh.github.io/2019/01/17/node /","excerpt":"","text":"Node 常用命令清除 node_modules 文件 ：rm -rvf node_modules/ 安装模块 全局安装 npm install -g n （全局的 npm install -g n@..） 安装到项目中的depend : npm install express 安装到项目devD : npm install express –save-dev 卸载模块：npm uninstall express 更新模块： npm update express 清本地缓存 ：npm cache clear 查看全局安装模块 ：npm list -g node 版本控制 n安装 通过npm安装 npm install -g n 通过源代码 12345$ git clone https://github.com/visionmedia/n.git$ cd n$ make install如果需要配置环境变量 在最后一条命令前加 PREFIX前缀$ PREFIX=$HOME make install #将n安装到~/bin/n 使用和安装node en安装制定版本 n 0.8.17 卸载 sudo n - 0.8.17 切换版本 输入n来选择已经安装的node版本，或者通过^C取消选择 1234$ n 0.8.17 ο 0.10.26 0.11.12 查看所有可安装版本 node ls (ls是list缩写)","categories":[],"tags":[]},{"title":"esLint","slug":"eslint","date":"2019-01-17T07:53:17.247Z","updated":"2019-01-17T10:22:43.545Z","comments":true,"path":"2019/01/17/eslint/","link":"","permalink":"https://pszh.github.io/2019/01/17/eslint/","excerpt":"","text":"esLint 介绍​ 团队开发 ，统一代码风格 ​ 命令介绍 https://eslint.org/docs/user-guide/command-line-interface 安装 &amp; 初始化配置文件全局安装​ 1. npm install -g eslint ​ 2. eslint –init ​ 然后一系列的配置 本地项目​ 1. npm install eslint –save-dev ​ 2. ./node_modules/.bin/eslint –init (需要当前项目路径) ​ 然后一系列配置 配置#### eslintrc文件配置 ​ 规则配置文件 ， 通过上面 init 方式配置的都是在项目最外层生成一个配置文件， （当然你也可以在package.json） ​ 官方文档 https://eslint.org/docs/user-guide/configuring 123456789101112131415161718192021222324252627282930313233343536&#123; \"env\": &#123; // 指定环境 \"node\": true, \"commonjs\": true, \"es6\": true &#125;, \"globals\": &#123; //指定全局 \"var1\": true, \"var2\": false &#125; \"plugins\":&#123; //配置插件 先通过 npm install --save-dev eslint-plugin-react 最好在init前安装 \"eslint-plugin-react\", &#125; \"extends\": \"eslint:recommended\", //扩展配置文件 \"parserOptions\": &#123; //指定解析器选项 \"ecmaVersion\": 2016 &#125;, \"rules\": &#123; // 配置规则 https://eslint.org/docs/rules/ \"indent\": [ \"error\", \"tab\" 使用tab键 ], \"linebreak-style\": [ \"error\", \"unix\" ], \"quotes\": [ \"error\", \"single\" 单引号 ], \"semi\": [ \"error\", \"always\" 使用分号 ] &#125;&#125; 部分文件忽略检测 在 eslintrc同目录下创建 .eslintignore 文件 1234567# /node_modules/* and /bower_components/* 这个是默认忽略的# Ignore built files except build/index.js 忽略build下的文件除了 index.jsbuild/*!build/index.js# 忽略 dist目录下文件dist/* 手动检测代码，自动修复格式化1234eslint --ext src //手动检测src文件夹下的.js --ext 默认 .js eslint --ext .js .vue src //手动检测src下的 .js .vue 文件eslint --fix src//修复大部分的格式问题 结合webpack使用​ 安装一个eslint-loader 的loader​ 12345module:&#123; preLoaders: [ //安全起见用这个preLoaders, 如果用loaders,且使用了babel-loader，那babel-loader必须在eslint-loader之前配置 &#123; test: /\\.js$/, loader: &quot;eslint-loader&quot;, exclude: /node_modules/&#125; ], &#125; git 代码提交前检测​ 这个时候不得不提一下git hook了（https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90）​ ​ 查看当前目录下的hook文件 cd .git/hooks &amp;&amp; ls ​ 然后看到 很多.sample 的文件，前面对应git 钩子一些操作， 而 .sample 后缀都是未启动状态，对应的钩子要生效，需要用shell脚本把.sample去掉，如何用js去掉， ​ 这里才是重点 (⚠️必须在git仓库添加之后) 安装pre-commit 1npm install pre-commit --save-dev 配置package.json 123456789101112131415第一种//执行静态文件检查\"scripts\": &#123; \"lint\": \"eslint --ext .js --cache --fix src\", //保证eslint在提交时会校验src目录下的js文件 &#125;, \"pre-commit\": [ \"lint\", ]第二种 //只校验提交代码\"scripts\": &#123; \"lint\": \"eslint src --ext .js --cache --fix\", \"pre-lint\": \"node check.js\"//https://www.jianshu.com/p/072a96633479&#125;,\"pre-commit\": [ \"pre-lint\",] 制定自己的规则https://eslint.org/docs/user-guide/command-line-interface 其他的配置 standardjs：https://standardjs.com/readme-zhcn.html （集成度很好 ，包括git hook） prettier：https://zhuanlan.zhihu.com/p/34188596","categories":[],"tags":[]}]}